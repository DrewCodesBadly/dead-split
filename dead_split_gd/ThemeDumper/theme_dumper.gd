extends FileDialog

func _ready() -> void:
	canceled.connect(get_tree().quit)
	TimerSettings.reload_theme()
	var path: String = await file_selected
	var temp_file := FileAccess.create_temp(FileAccess.READ_WRITE, "resource_dumper", ".tres", false)
	if temp_file == null:
		printerr(FileAccess.get_open_error())
		get_tree().quit()
	var temp_path := temp_file.get_path_absolute()
	var zip := ZIPPacker.new()
	zip.open(path)
	# have to save/load individually sadly because otherwise the resource loader reloads the script
	# and it causes there two be two TimerTheme script files
	# also the zip interface is wacky so we write to a temp file, then copy it into the zip
	ResourceSaver.save(TimerSettings.theme.active_split_bg_stylebox, temp_path, ResourceSaver.FLAG_BUNDLE_RESOURCES)
	zip.start_file("active_split_bg_stylebox.tres")
	zip.write_file(FileAccess.get_file_as_bytes(temp_path))
	zip.close_file()
	ResourceSaver.save(TimerSettings.theme.inactive_split_bg_stylebox, temp_path, ResourceSaver.FLAG_BUNDLE_RESOURCES)
	zip.start_file("inactive_split_bg_stylebox.tres")
	zip.write_file(FileAccess.get_file_as_bytes(temp_path))
	zip.close_file()
	ResourceSaver.save(TimerSettings.theme.split_ahead_gaining_label, temp_path, ResourceSaver.FLAG_BUNDLE_RESOURCES)
	zip.start_file("split_ahead_gaining_label.tres")
	zip.write_file(FileAccess.get_file_as_bytes(temp_path))
	zip.close_file()
	ResourceSaver.save(TimerSettings.theme.split_ahead_losing_label, temp_path, ResourceSaver.FLAG_BUNDLE_RESOURCES)
	zip.start_file("split_ahead_losing_label.tres")
	zip.write_file(FileAccess.get_file_as_bytes(temp_path))
	zip.close_file()
	ResourceSaver.save(TimerSettings.theme.split_behind_gaining_label, temp_path, ResourceSaver.FLAG_BUNDLE_RESOURCES)
	zip.start_file("split_behind_gaining_label.tres")
	zip.write_file(FileAccess.get_file_as_bytes(temp_path))
	zip.close_file()
	ResourceSaver.save(TimerSettings.theme.split_behind_losing_label, temp_path, ResourceSaver.FLAG_BUNDLE_RESOURCES)
	zip.start_file("split_behind_losing_label.tres")
	zip.write_file(FileAccess.get_file_as_bytes(temp_path))
	zip.close_file()
	ResourceSaver.save(TimerSettings.theme.split_best_segment_label, temp_path, ResourceSaver.FLAG_BUNDLE_RESOURCES)
	zip.start_file("split_best_segment_label.tres")
	zip.write_file(FileAccess.get_file_as_bytes(temp_path))
	zip.close_file()
	ResourceSaver.save(TimerSettings.theme.timer_background_material, temp_path, ResourceSaver.FLAG_BUNDLE_RESOURCES)
	zip.start_file("timer_background_material.tres")
	zip.write_file(FileAccess.get_file_as_bytes(temp_path))
	zip.close_file()
	ResourceSaver.save(TimerSettings.theme.timer_background_stylebox, temp_path, ResourceSaver.FLAG_BUNDLE_RESOURCES)
	zip.start_file("timer_background_stylebox.tres")
	zip.write_file(FileAccess.get_file_as_bytes(temp_path))
	zip.close_file()
	ResourceSaver.save(TimerSettings.theme.timer_finished_label, temp_path, ResourceSaver.FLAG_BUNDLE_RESOURCES)
	zip.start_file("timer_finished_label.tres")
	zip.write_file(FileAccess.get_file_as_bytes(temp_path))
	zip.close_file()
	ResourceSaver.save(TimerSettings.theme.timer_finished_pb_label, temp_path, ResourceSaver.FLAG_BUNDLE_RESOURCES)
	zip.start_file("timer_finished_pb_label.tres")
	zip.write_file(FileAccess.get_file_as_bytes(temp_path))
	zip.close_file()
	ResourceSaver.save(TimerSettings.theme.timer_running_label, temp_path, ResourceSaver.FLAG_BUNDLE_RESOURCES)
	zip.start_file("timer_running_label.tres")
	zip.write_file(FileAccess.get_file_as_bytes(temp_path))
	zip.close_file()
	ResourceSaver.save(TimerSettings.theme.timer_stopped_label, temp_path, ResourceSaver.FLAG_BUNDLE_RESOURCES)
	zip.start_file("timer_stopped_label.tres")
	zip.write_file(FileAccess.get_file_as_bytes(temp_path))
	zip.close_file()
	ResourceSaver.save(TimerSettings.theme.timer_theme, temp_path, ResourceSaver.FLAG_BUNDLE_RESOURCES)
	zip.start_file("timer_theme.tres")
	zip.write_file(FileAccess.get_file_as_bytes(temp_path))
	zip.close_file()
	
	temp_file.close()
	zip.close()
	
	get_tree().quit()
